/**
* Jikan
* Jikan
*
* The version of the OpenAPI document: 1.3.1
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package services.jikanAPI

import services.jikanAPI.models.ProductList
import services.jikanAPI.infrastructure.*

//import kotlinx.serialization.UnstableDefault
import io.ktor.client.engine.HttpClientEngine
import io.ktor.client.features.json.serializer.KotlinxSerializer
import io.ktor.client.utils.EmptyContent
import kotlinx.serialization.json.Json
import kotlinx.serialization.json.JsonConfiguration

class SearchApi
//    @OptIn(UnstableDefault::class)
    constructor(
        baseUrl: String = "https://api.jikan.moe/v3",
        httpClientEngine: HttpClientEngine? = null,
        serializer: KotlinxSerializer)
    : ApiClient(baseUrl, httpClientEngine, serializer) {

//    @OptIn(UnstableDefault::class)
    constructor(
        baseUrl: String = "https://api.jikan.moe/v3",
        httpClientEngine: HttpClientEngine? = null,
        jsonConfiguration: JsonConfiguration = JsonConfiguration.Default)
    : this(baseUrl, httpClientEngine, KotlinxSerializer(Json(jsonConfiguration)))

    /**
    * Get Anime
    * 
    * @param q Query 
    * @param page Paging 
    * @return ProductList
    */
    @Suppress("UNCHECKED_CAST")
    suspend fun getAnime(q: String, page: Int) : ProductList {

        val localVariableAuthNames = listOf<String>()

        val localVariableBody = EmptyContent

        val localVariableQuery = mutableMapOf<String, List<String>>()
        q.apply { localVariableQuery["q"] = listOf(q) }
        page.apply { localVariableQuery["page"] = listOf("$page") }

        val localVariableHeaders = mutableMapOf<String, String>()

        val localVariableConfig = RequestConfig(
            RequestMethod.GET,
            "/search/anime",
            query = localVariableQuery,
            headers = localVariableHeaders
        )

        return request(
            localVariableConfig,
            localVariableBody,
            localVariableAuthNames
        )
    }


    /**
    * Get Manga
    * 
    * @param q Query 
    * @param page Paging 
    * @return ProductList
    */
    @Suppress("UNCHECKED_CAST")
    suspend fun getManga(q: String, page: Int) : ProductList {

        val localVariableAuthNames = listOf<String>()

        val localVariableBody = EmptyContent

        val localVariableQuery = mutableMapOf<String, List<String>>()
        q.apply { localVariableQuery["q"] = listOf(q) }
        page.apply { localVariableQuery["page"] = listOf("$page") }

        val localVariableHeaders = mutableMapOf<String, String>()

        val localVariableConfig = RequestConfig(
            RequestMethod.GET,
            "/search/manga",
            query = localVariableQuery,
            headers = localVariableHeaders
        )

        return request(
            localVariableConfig,
            localVariableBody,
            localVariableAuthNames
        )
    }
}
