/**
* Jikan
* Jikan
*
* The version of the OpenAPI document: 1.3.1
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package services.jikanAPI

import io.ktor.http.HttpMethod
import kotlinx.coroutines.Dispatchers
import kotlinx.coroutines.GlobalScope
import kotlinx.coroutines.launch

import services.jikanAPI.models.ProductList
import services.jikanAPI.infrastructure.*

class SearchApi {

//    private val apiService: ApiConnector = ApiService()
    private val apiService: ApiConnector = ApiStub()

    fun getAnime(q: String, page: Int, callback: (ProductList) -> Unit)  {

        val localVariableQuery = mutableMapOf<String, String>()
        q.apply { localVariableQuery["q"] = q }
        page.apply { localVariableQuery["page"] = "$page" }

        val localVariableConfig = RequestConfig(
                HttpMethod.Get,
            "/search/anime",
            query = localVariableQuery
        )

        apiService.request(localVariableConfig) {
//            GlobalScope.launch(Dispatchers.Main) {
//                callback(it)
//            }
            callback(it)
        }
    }

    fun getManga(q: String, page: Int, callback: (ProductList) -> Unit) {

        val localVariableQuery = mutableMapOf<String, String>()
        q.apply { localVariableQuery["q"] = q }
        page.apply { localVariableQuery["page"] = "$page" }

        val localVariableConfig = RequestConfig(
            HttpMethod.Get,
            "/search/manga",
            query = localVariableQuery
        )

        apiService.request(localVariableConfig) {
//            GlobalScope.apply {
//                launch(Dispatchers.Main) {
//                    callback(it)
//                }
//            }
            callback(it)
        }
    }
}
